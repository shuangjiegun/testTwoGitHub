<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	
<!-- 	<context:component-scan base-package="com.goldfinance.jinGC.common"></context:component-scan> -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 数据源，使用dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		 <property name="initialSize" value="10" />
        <property name="maxActive" value="100" />
        <property name="maxIdle" value="30" />
        <property name="maxWait" value="500" />
         <property name="validationQuery" value="select 1"/>
	</bean>

	<!-- sqlSessinFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.goldfinance.jinGC.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>		
	</bean>
	
	
	<!-- 以下是数据源二的配置项 -->
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${dataSource2.driver}" />
		<property name="url" value="${dataSource2.url}" />
		<property name="username" value="${dataSource2.username}" />
		<property name="password" value="${dataSource2.password}" />
		 <property name="initialSize" value="10" />
        <property name="maxActive" value="100" />
        <property name="maxIdle" value="30" />
        <property name="maxWait" value="500" />
         <property name="validationQuery" value="select 1 from dual"/>
	</bean>

	<!-- sqlSessinFactory -->
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource2" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.goldfinance.jinGC.mapperOra"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"/>		
	</bean>
	
	<!-- quartz定时任务 -->
	<!-- 要调用的工作类 -->
	<bean id="allFundProductTask" class="com.goldfinance.jinGC.common.AllFundProductTask"></bean>
	<bean id="remainConnectTask" class="com.goldfinance.jinGC.common.RemainConnectTask"></bean>
	
	<!-- 定义调用对象和调用对象的方法 -->
	<bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类 -->
		<property name="targetObject" ref="allFundProductTask"></property>
		<!-- 调用类中的方法 -->
		<property name="targetMethod" value="run"></property>
	</bean>
	
	<bean id="remainConn" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类 -->
		<property name="targetObject" ref="remainConnectTask"></property>
		<!-- 调用类中的方法 -->
		<property name="targetMethod" value="run"></property>
	</bean>
	
	<!-- 定义触发时间 -->
	<bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobtask"></property>
		<!-- cron表达式       0 0/30 * * * ?      0 30 10 * * ?    0 0 */1 * * ? -->
		<property name="cronExpression" value="0 14 11 * * ?">
				<!--   0 0 */2 * * ? 每两小时、整点触发 -->  
                <!--   0 0/2 * * * ? 每两分钟  -->  
                <!--   0/5 * * * * ? 每五秒钟  -->  
                <!--   0 15 10 * * ? 每天Y分X点触发  -->
		</property>  
	</bean>
	
	<bean id="doTime2" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="remainConn"></property>
		<!-- cron表达式       0 0/30 * * * ?      0 30 10 * * ?    0 0 */1 * * ? -->
		<property name="cronExpression" value="0 0 */1 * * ?">
				<!--   0 0 */2 * * ? 每两小时、整点触发 -->  
                <!--   0 0/2 * * * ? 每两分钟  -->  
                <!--   0/5 * * * * ? 每五秒钟  -->  
                <!--   0 15 10 * * ? 每天Y分X点触发  -->
		</property>  
	</bean>		
	
	<!-- 总管理类 如果将lazy-init='false' 那么容器启动就会执行调度程序 -->
	<bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime" />
				<ref bean="doTime2" />
			</list>
		</property>
	</bean>
	
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="protocol">
			<value>smtp</value>
		</property>
		<property name="host" value="mail.gold-finance.com.cn"/>
		<property name="port" value="587"/>
<!-- 		<property name="username" value="portal@gold-finance.local"/>
		<property name="password" value="1qaz@WSX"/> -->
	<!-- 	<property name="username" value="King-Service@gold-finance.local"/> -->
		<property name="username" value="King-Service@gold-finance.local"/>
		<property name="password" value="jgc1234.com"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>		
		</property>
	</bean>
	
	<bean id="emailService" class="com.goldfinance.jinGC.service.impl.EmailServiceImpl">	
		<property name="javaMailSender" ref="javaMailSender"/>
		<property name="systemEmail" value="King-Service@gold-finance.com.cn"/>
	</bean>
	
</beans>